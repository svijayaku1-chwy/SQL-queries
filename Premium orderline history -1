Premium orderline history -1
WITH CUSTOMERS AS (
  
  SELECT
  CUSTOMER_ID,
  CASE WHEN ORDERS_L3M > 0 THEN 1 ELSE 0 END AS ACTIVE_3M, 
  ORDERS_L3M,
  ORDERS_L6M,
  ORDERS_L9M,
  ORDERS_L12M,
  FIRST_ORDER_DATE,
  LAST_ORDER_DATE,
  AUTOSHIP_STATUS,
  REGISTRATION_DATE
  FROM CDM.CUSTOMER_AGGREGATE
  
  WHERE REGISTRATION_DATE >= '2021-01-01'
  
),

ORDERS AS (
  
  SELECT
  CA.CUSTOMER_ID,
  CA.REGISTRATION_DATE,
  CA.FIRST_ORDER_DATE,
  OL.ORDER_ID,
  OL.PRODUCT_ID,
  PD.CATEGORY_LEVEL1,
  PD.CATEGORY_LEVEL2,
  PD.CATEGORY_LEVEL3,
  PD.MERCH_CLASSIFICATION1,
  PD.MERCH_CLASSIFICATION2,
  CAST(OL.ORDER_PLACED_DTTM AS DATE) AS ORDER_PLACED_DATE

  FROM CUSTOMERS CA
  
  LEFT JOIN ECOM.ORDER_LINE OL
  ON CA.CUSTOMER_ID = OL.CUSTOMER_ID 
  AND OL.ORDER_LINE_TOTAL_PRICE != 0
  AND OL.ORDER_LINE_SHIPPED_DTTM IS NOT NULL
  AND OL.ORDER_STATUS NOT IN ('X', 'P', 'J')
  
  LEFT JOIN PDM.PRODUCT PD
  ON OL.PRODUCT_ID = PD.PRODUCT_ID
  
  where ol.ORDER_PLACED_DTTM >= '2021-01-01' 
),

//PREMIUM_CUSTOMERS AS (
//select CUSTOMER_ID,PREM_RATIO from (
//    select 
//      DISTINCT 
//      ca.CUSTOMER_ID,
//        DIV0(
//        COUNT(DISTINCT (CASE when ol.PART_NUMBER in (select DISTINCT PART_NUMBER from ECOM_SANDBOX.PREMIUM_PRODUCT_LIST) THEN ol.ORDER_ID ELSE NULL END))*100,
//        COUNT(DISTINCT ol.ORDER_ID)) 
//        as PREM_RATIO
//    from CDM.CUSTOMER_AGGREGATE ca
//    INNER JOIN ecom.order_line ol
//        ON ol.CUSTOMER_ID = ca.CUSTOMER_ID
//        AND ol.ORDER_PLACED_DTTM >= '2021-01-01' 
//        AND ca.REGISTRATION_CANCEL_DATE is null
//        AND ca.REGISTRATION_DATE >= '2021-01-01'
//    INNER JOIN pdm.product pd
//        ON ol.PRODUCT_ID = pd.PRODUCT_ID
//        AND OL.ORDER_STATUS NOT IN ('X', 'P', 'J')
//        AND pd.MERCH_CLASSIFICATION1 in ('Consumables','Premium')
//    group by ca.CUSTOMER_ID
//    having COUNT(DISTINCT ol.ORDER_ID) >= 3
//  ) where PREM_RATIO >= 30
//),

ALL_CORE_FOOD AS (
  select
  DISTINCT ca.CUSTOMER_ID
    from CDM.CUSTOMER_AGGREGATE ca
    INNER JOIN ecom.order_line ol
        ON ol.CUSTOMER_ID = ca.CUSTOMER_ID
        AND ol.ORDER_PLACED_DTTM >= '2021-01-01'
        AND ca.REGISTRATION_CANCEL_DATE is null
        AND ca.REGISTRATION_DATE >= '2021-01-01'
    INNER JOIN pdm.product pd
        ON ol.PRODUCT_ID = pd.PRODUCT_ID
        AND OL.ORDER_STATUS NOT IN ('X', 'P', 'J')
        AND pd.MERCH_CLASSIFICATION1 = 'Consumables'
        AND pd.MERCH_CLASSIFICATION2 = 'Core Food'
    group by ca.CUSTOMER_ID
    having COUNT(DISTINCT ol.ORDER_ID) >= 3
),

CORE_FOOD_TO_PREM AS (
  SELECT A.CUSTOMER_ID
  FROM ALL_CORE_FOOD AS A
  INNER JOIN "EDLDB"."ECOM_SANDBOX"."PREMIUM_CUSTOMER_LIST" AS P
  ON A.CUSTOMER_ID = P.CUSTOMER_ID
),

FIRST_PREMIUM_DATE AS (
  SELECT
      p.CUSTOMER_ID,
      MIN(CASE WHEN PRODUCT_ID IN (select DISTINCT PRODUCT_ID from ECOM_SANDBOX.PREMIUM_PRODUCT_LIST) THEN ORDER_PLACED_DATE ELSE NULL END) AS FIRST_PREMIUM_DATE

  FROM CORE_FOOD_TO_PREM as p
  LEFT JOIN ORDERS as o
  ON p.CUSTOMER_ID = o.CUSTOMER_ID

  GROUP BY 1
)

SELECT 
    p.CUSTOMER_ID,
    FIRST_PREMIUM_DATE,
    CASE WHEN FIRST_ORDER_DATE = FIRST_PREMIUM_DATE THEN 1 ELSE 0 END AS IS_FIRST_PREMIUM,
    
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE BETWEEN DATEADD('day',-90,FIRST_PREMIUM_DATE) AND DATEADD('day',-1,FIRST_PREMIUM_DATE) THEN ORDER_ID ELSE NULL END) AS BEFORE_PREMIUM_3M,
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE BETWEEN DATEADD('day',-180,FIRST_PREMIUM_DATE) AND DATEADD('day',-91,FIRST_PREMIUM_DATE) THEN ORDER_ID ELSE NULL END) AS BEFORE_PREMIUM_6M,
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE BETWEEN DATEADD('day',-360,FIRST_PREMIUM_DATE) AND DATEADD('day',-181,FIRST_PREMIUM_DATE) THEN ORDER_ID ELSE NULL END) AS BEFORE_PREMIUM_12M,
    
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE < FIRST_PREMIUM_DATE THEN ORDER_ID ELSE NULL END) AS TOTAL_ORDERS_BEFORE_PREMIUM,
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE < FIRST_PREMIUM_DATE AND MERCH_CLASSIFICATION1 = 'Consumables' THEN ORDER_ID ELSE NULL END) AS CONSUMABLES_BEFORE_PREMIUM,
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE < FIRST_PREMIUM_DATE AND MERCH_CLASSIFICATION1 = 'Hard Goods' THEN ORDER_ID ELSE NULL END) AS HARDGOODS_BEFORE_PREMIUM,
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE < FIRST_PREMIUM_DATE AND MERCH_CLASSIFICATION1 = 'Healthcare' THEN ORDER_ID ELSE NULL END) AS HEALTHCARE_BEFORE_PREMIUM,
    
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE BETWEEN DATEADD('day',1,FIRST_PREMIUM_DATE) AND DATEADD('day',90,FIRST_PREMIUM_DATE) THEN ORDER_ID ELSE NULL END) AS AFTER_PREMIUM_3M,
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE BETWEEN DATEADD('day',91,FIRST_PREMIUM_DATE) AND DATEADD('day',180,FIRST_PREMIUM_DATE) THEN ORDER_ID ELSE NULL END) AS AFTER_PREMIUM_6M,
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE BETWEEN DATEADD('day',181,FIRST_PREMIUM_DATE) AND DATEADD('day',360,FIRST_PREMIUM_DATE) THEN ORDER_ID ELSE NULL END) AS AFTER_PREMIUM_12M,
    
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE > FIRST_PREMIUM_DATE THEN ORDER_ID ELSE NULL END) AS TOTAL_ORDERS_AFTER_PREMIUM,
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE > FIRST_PREMIUM_DATE AND MERCH_CLASSIFICATION1 = 'Consumables' THEN ORDER_ID ELSE NULL END) AS CONSUMABLES_AFTER_PREMIUM,
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE > FIRST_PREMIUM_DATE AND MERCH_CLASSIFICATION1 = 'Hard Goods' THEN ORDER_ID ELSE NULL END) AS HARDGOODS_AFTER_PREMIUM,
    COUNT(DISTINCT CASE WHEN ORDER_PLACED_DATE > FIRST_PREMIUM_DATE AND MERCH_CLASSIFICATION1 = 'Healthcare' THEN ORDER_ID ELSE NULL END) AS HEALTHCARE_AFTER_PREMIUM
 
FROM ORDERS AS O
LEFT JOIN FIRST_PREMIUM_DATE as p
  ON p.CUSTOMER_ID = o.CUSTOMER_ID

  GROUP BY 1,2,3
;