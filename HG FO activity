HG FO activity
WITH CUSTOMERS AS (
  
  SELECT
  CUSTOMER_ID,
  CASE WHEN ORDERS_L3M > 0 THEN 1 ELSE 0 END AS ACTIVE_3M, 
  ORDERS_L3M,
  ORDERS_L6M,
  ORDERS_L9M,
  ORDERS_L12M,
  FIRST_ORDER_DATE,
  LAST_ORDER_DATE,
  AUTOSHIP_STATUS,
  REGISTRATION_DATE
  FROM CDM.CUSTOMER_AGGREGATE
  
  WHERE REGISTRATION_DATE BETWEEN '2021-01-01' AND '2021-09-01'
  
),

ORDERS AS (
  
  SELECT
  CA.CUSTOMER_ID,
  CA.REGISTRATION_DATE,
  CA.FIRST_ORDER_DATE,
  OL.ORDER_ID,
  OL.PRODUCT_ID,
  PD.CATEGORY_LEVEL1,
  PD.CATEGORY_LEVEL2,
  PD.CATEGORY_LEVEL3,
  PD.MERCH_CLASSIFICATION1,
  PD.MERCH_CLASSIFICATION2,
  CAST(OL.ORDER_PLACED_DTTM AS DATE) AS ORDER_PLACED_DATE,
  OL.ORDER_LINE_TOTAL_PRICE AS ORDER_PRICE,
  CASE WHEN OL.ORDER_AUTO_REORDER_FLAG = 'TRUE' then 'Autoship' else 'Non_Autoship' end as ORDER_TYPE,
  ROW_NUMBER() OVER (PARTITION BY CA.CUSTOMER_ID, 
                     CASE WHEN OL.ORDER_AUTO_REORDER_FLAG = 'TRUE' then 'Autoship' else 'Non_Autoship' END ORDER BY OL.ORDER_PLACED_DTTM ASC) AS AS_RANKING,
  DENSE_RANK() OVER (PARTITION BY CA.CUSTOMER_ID ORDER BY OL.ORDER_PLACED_DTTM ASC) AS ORDER_RANKING
  
  FROM CUSTOMERS CA
  
  LEFT JOIN ECOM.ORDER_LINE OL
  ON CA.CUSTOMER_ID = OL.CUSTOMER_ID 
  AND OL.ORDER_LINE_TOTAL_PRICE != 0
  AND OL.ORDER_LINE_SHIPPED_DTTM IS NOT NULL
  AND OL.ORDER_STATUS NOT IN ('X', 'P', 'J')
  
  LEFT JOIN PDM.PRODUCT PD
  ON OL.PRODUCT_ID = PD.PRODUCT_ID

),

FIRST_AS AS (

  SELECT DISTINCT
  CUSTOMER_ID,
  ORDER_ID AS FIRST_AS_ORDER_ID,
  CAST(ORDER_PLACED_DATE AS DATE) AS FIRST_AS_ORDER_DATE
  
  FROM ORDERS
  WHERE AS_RANKING = 1
  AND ORDER_TYPE = 'Autoship'
),

MC1_DATES AS (
  SELECT
  CUSTOMER_ID,
  
  MIN(CASE WHEN MERCH_CLASSIFICATION1 = 'Consumables' THEN ORDER_PLACED_DATE ELSE NULL END) AS FIRST_CONSUMABLES_DATE,
  MIN(CASE WHEN MERCH_CLASSIFICATION1 = 'Healthcare' THEN ORDER_PLACED_DATE ELSE NULL END) AS FIRST_HEALTHCARE_DATE,
  MIN(CASE WHEN MERCH_CLASSIFICATION1 = 'Hard Goods' THEN ORDER_PLACED_DATE ELSE NULL END) AS FIRST_HARDGOODS_DATE,
  MIN(CASE WHEN MERCH_CLASSIFICATION1 = 'Specialty' THEN ORDER_PLACED_DATE ELSE NULL END) AS FIRST_SPECIALITY_DATE,
  
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION1 = 'Consumables' THEN 1 ELSE 0 END) FIRST_ORDER_CONSUMABLES,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION1 = 'Healthcare' THEN 1 ELSE 0 END) FIRST_ORDER_HEALTHCARE,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION1 = 'Hard Goods' THEN 1 ELSE 0 END) FIRST_ORDER_HARDGOODS,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION1 = 'Specialty' THEN 1 ELSE 0 END) FIRST_ORDER_SPECIALTY,
  
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Apparel & People Products' THEN 1 ELSE 0 END) FIRST_ORDER_APPAREL,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Leashes, Collars & Harnesses' THEN 1 ELSE 0 END) FIRST_ORDER_LEASH,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Core Treats' THEN 1 ELSE 0 END) FIRST_ORDER_TREAT,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Toys' THEN 1 ELSE 0 END) FIRST_ORDER_TOY,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Beds & Furniture' THEN 1 ELSE 0 END) FIRST_ORDER_BED,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Litter' THEN 1 ELSE 0 END) FIRST_ORDER_LITTER,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Core Food' THEN 1 ELSE 0 END) FIRST_ORDER_FOOD,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Beauty & Grooming' THEN 1 ELSE 0 END) FIRST_ORDER_BEAUTY,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Containment & Gear' THEN 1 ELSE 0 END) FIRST_ORDER_CONTAINMENT,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Premium' THEN 1 ELSE 0 END) FIRST_ORDER_PREMIUM,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Bowls & Feeders' THEN 1 ELSE 0 END) FIRST_ORDER_BOWL,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Personalized' THEN 1 ELSE 0 END) FIRST_ORDER_PERSONALIZED,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Waste Management' THEN 1 ELSE 0 END) FIRST_ORDER_WASTE,
  MAX(CASE WHEN ORDER_RANKING = 1 AND MERCH_CLASSIFICATION2 = 'Perishable' THEN 1 ELSE 0 END) FIRST_ORDER_PERISHABLE,
  
  MAX(CASE WHEN MERCH_CLASSIFICATION1 = 'Consumables' THEN 1 ELSE 0 END) AS CURR_HAS_CONSUMABLES,
  MAX(CASE WHEN MERCH_CLASSIFICATION1 = 'Healthcare' THEN 1 ELSE 0 END) AS CURR_HAS_HEALTHCARE,
  MAX(CASE WHEN MERCH_CLASSIFICATION1 = 'Hard Goods' THEN 1 ELSE 0 END) AS CURR_HAS_HARDGOODS,
  MAX(CASE WHEN MERCH_CLASSIFICATION1 = 'Specialty' THEN 1 ELSE 0 END) AS CURR_HAS_SPECIALTY,
  
  COUNT(DISTINCT CASE WHEN ORDER_RANKING = 1 THEN MERCH_CLASSIFICATION1 ELSE NULL END) AS FIRST_ORDER_NUMBER_OF_MC1,
  COUNT(DISTINCT MERCH_CLASSIFICATION1) AS CURRENT_NUMBER_OF_MC1,
  
  SUM(CASE WHEN ORDER_RANKING = 1 THEN ORDER_PRICE ELSE 0 END) AS FIRST_ORDER_AMOUNT,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 0 AND 30 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_30D,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 30 AND 60 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_60D,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 60 AND 90 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_90D,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 90 AND 120 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_120D,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 120 AND 150 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_160D,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 150 AND 180 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_180D,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 180 AND 210 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_210D,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 210 AND 240 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_240D,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 240 AND 270 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_270D,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 270 AND 300 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_300D,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 300 AND 330 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_330D,
  SUM(CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,ORDER_PLACED_DATE) BETWEEN 330 AND 360 THEN ORDER_PRICE ELSE 0 END) AS ORDER_AMOUNT_360D
  
  FROM ORDERS
  
  GROUP BY 1
),

FO_CUST AS (
  SELECT
  CA.CUSTOMER_ID,
  ACTIVE_3M,
  ORDERS_L3M,
  ORDERS_L6M,
  ORDERS_L9M,
  ORDERS_L12M,
  FIRST_ORDER_DATE,
  LAST_ORDER_DATE,
  AUTOSHIP_STATUS,
  REGISTRATION_DATE,
  DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) AS DAYS_TO_LAST_ORDER,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 30 THEN 1 ELSE 0 END AS ACTIVE_30D,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 60 THEN 1 ELSE 0 END AS ACTIVE_60D,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 90 THEN 1 ELSE 0 END AS ACTIVE_90D,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 120 THEN 1 ELSE 0 END AS ACTIVE_120D,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 150 THEN 1 ELSE 0 END AS ACTIVE_150D,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 180 THEN 1 ELSE 0 END AS ACTIVE_180D,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 210 THEN 1 ELSE 0 END AS ACTIVE_210D,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 240 THEN 1 ELSE 0 END AS ACTIVE_240D,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 270 THEN 1 ELSE 0 END AS ACTIVE_270D,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 300 THEN 1 ELSE 0 END AS ACTIVE_300D,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 330 THEN 1 ELSE 0 END AS ACTIVE_330D,
  CASE WHEN DATEDIFF('day',FIRST_ORDER_DATE,LAST_ORDER_DATE) > 360 THEN 1 ELSE 0 END AS ACTIVE_360D,
  DATEDIFF('day',LAST_ORDER_DATE,CURRENT_DATE) AS DAYS_SINCE_LAST_ORDER,
  FIRST_AS_ORDER_ID,
  FIRST_AS_ORDER_DATE,
  FIRST_CONSUMABLES_DATE,
  FIRST_HEALTHCARE_DATE,
  FIRST_HARDGOODS_DATE,
  FIRST_SPECIALITY_DATE,
  FIRST_ORDER_CONSUMABLES,
  FIRST_ORDER_HEALTHCARE,
  FIRST_ORDER_HARDGOODS,
  FIRST_ORDER_SPECIALTY,
  CURR_HAS_CONSUMABLES,
  CURR_HAS_HEALTHCARE,
  CURR_HAS_HARDGOODS,
  CURR_HAS_SPECIALTY,
  FIRST_ORDER_NUMBER_OF_MC1,
  CURRENT_NUMBER_OF_MC1,
  FIRST_ORDER_APPAREL,
  FIRST_ORDER_LEASH,
  FIRST_ORDER_TREAT,
  FIRST_ORDER_TOY,
  FIRST_ORDER_BED,
  FIRST_ORDER_LITTER,
  FIRST_ORDER_FOOD,
  FIRST_ORDER_BEAUTY,
  FIRST_ORDER_CONTAINMENT,
  FIRST_ORDER_PREMIUM,
  FIRST_ORDER_BOWL,
  FIRST_ORDER_PERSONALIZED,
  FIRST_ORDER_WASTE,
  FIRST_ORDER_PERISHABLE,
  CONCAT(CASE WHEN FIRST_ORDER_APPAREL = 1 THEN 'APPAREL-' ELSE '' END,
         CASE WHEN FIRST_ORDER_LEASH = 1 THEN 'LEASH-' ELSE '' END,
         CASE WHEN FIRST_ORDER_TREAT = 1 THEN 'TREAT-' ELSE '' END,
         CASE WHEN FIRST_ORDER_TOY = 1 THEN 'TOY-' ELSE '' END,
         CASE WHEN FIRST_ORDER_BED = 1 THEN 'BED-' ELSE '' END,
         CASE WHEN FIRST_ORDER_FOOD = 1 THEN 'FOOD-' ELSE '' END,
         CASE WHEN FIRST_ORDER_BEAUTY = 1 THEN 'BEAUTY-' ELSE '' END,
         CASE WHEN FIRST_ORDER_CONTAINMENT = 1 THEN 'CONTAINMENT-' ELSE '' END,
         CASE WHEN FIRST_ORDER_PREMIUM = 1 THEN 'PREMIUM-' ELSE '' END,
         CASE WHEN FIRST_ORDER_BOWL = 1 THEN 'BOWL-' ELSE '' END,
         CASE WHEN FIRST_ORDER_PERSONALIZED = 1 THEN 'PERSONALIZED-' ELSE '' END,
         CASE WHEN FIRST_ORDER_WASTE = 1 THEN 'WASTE-' ELSE '' END,
         CASE WHEN FIRST_ORDER_LITTER = 1 THEN 'LITTER-' ELSE '' END,
         CASE WHEN FIRST_ORDER_PERISHABLE = 1 THEN 'PERISHABLE-' ELSE '' END
        ) AS FIRST_ORDER_MC2,
  FIRST_ORDER_AMOUNT,
  ORDER_AMOUNT_30D,
  ORDER_AMOUNT_60D,
  ORDER_AMOUNT_90D,
  ORDER_AMOUNT_120D,
  ORDER_AMOUNT_160D,
  ORDER_AMOUNT_180D,
  ORDER_AMOUNT_210D,
  ORDER_AMOUNT_240D,
  ORDER_AMOUNT_270D,
  ORDER_AMOUNT_300D,
  ORDER_AMOUNT_330D,
  ORDER_AMOUNT_360D

  FROM CUSTOMERS CA

  LEFT JOIN FIRST_AS FA
  ON CA.CUSTOMER_ID = FA.CUSTOMER_ID

  LEFT JOIN MC1_DATES MD
  ON CA.CUSTOMER_ID = MD.CUSTOMER_ID
  
  WHERE FIRST_ORDER_HARDGOODS = 1
)

SELECT 
*
FROM FO_CUST
QUALIFY ROW_NUMBER() OVER (ORDER BY RANDOM()) <= 100000