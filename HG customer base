HG customer base
create or replace table AUDIENCE_SEGMENTATION_SANDBOX.FO_HG_CUSTOMERS AS
(

WITH CUSTOMERS AS (
  SELECT DISTINCT
  CUSTOMER_ID,
  CASE WHEN ORDERS_L3M > 0 THEN 1 ELSE 0 END AS ACTIVE_3M, 
  ORDERS_L3M,
  ORDERS_L6M,
  ORDERS_L9M,
  ORDERS_L12M,
  FIRST_ORDER_DATE,
  LAST_ORDER_DATE,
  AUTOSHIP_STATUS,
  REGISTRATION_DATE
  FROM CDM.CUSTOMER_AGGREGATE
  
  WHERE REGISTRATION_DATE BETWEEN DATEADD('day',-365,CURRENT_DATE) AND CURRENT_DATE
  
),

ORDERS AS (
  
  SELECT
  CA.CUSTOMER_ID,
  CA.REGISTRATION_DATE,
  CA.FIRST_ORDER_DATE,
  OL.ORDER_ID,
  OL.PRODUCT_ID,
  PD.CATEGORY_LEVEL1,
  PD.CATEGORY_LEVEL2,
  PD.CATEGORY_LEVEL3,
  PD.MERCH_CLASSIFICATION1,
  PD.MERCH_CLASSIFICATION2,
  CAST(OL.ORDER_PLACED_DTTM AS DATE) AS ORDER_PLACED_DATE,
  OL.ORDER_LINE_TOTAL_PRICE AS ORDER_PRICE,
  CASE WHEN OL.ORDER_AUTO_REORDER_FLAG = 'TRUE' then 'Autoship' else 'Non_Autoship' end as ORDER_TYPE,
  ROW_NUMBER() OVER (PARTITION BY CA.CUSTOMER_ID, 
                     CASE WHEN OL.ORDER_AUTO_REORDER_FLAG = 'TRUE' then 'Autoship' else 'Non_Autoship' END ORDER BY OL.ORDER_PLACED_DTTM ASC) AS AS_RANKING,
  DENSE_RANK() OVER (PARTITION BY CA.CUSTOMER_ID ORDER BY OL.ORDER_PLACED_DTTM ASC) AS ORDER_RANKING
  
  FROM CUSTOMERS CA
  
  LEFT JOIN ECOM.ORDER_LINE OL
  ON CA.CUSTOMER_ID = OL.CUSTOMER_ID 
  AND OL.ORDER_LINE_TOTAL_PRICE != 0
  AND OL.ORDER_LINE_SHIPPED_DTTM IS NOT NULL
  AND OL.ORDER_STATUS NOT IN ('X', 'P', 'J')
  AND OL.ORDER_PLACED_DTTM BETWEEN DATEADD('day',-365,CURRENT_DATE) AND CURRENT_DATE 
  
  LEFT JOIN PDM.PRODUCT PD
  ON OL.PRODUCT_ID = PD.PRODUCT_ID

),

MC1_DATES AS (
  SELECT
  CUSTOMER_ID,
  
  MIN(CASE WHEN MERCH_CLASSIFICATION1 = 'Consumables' THEN ORDER_PLACED_DATE ELSE NULL END) AS FIRST_CONSUMABLES_DATE,
  MIN(CASE WHEN MERCH_CLASSIFICATION1 = 'Healthcare' THEN ORDER_PLACED_DATE ELSE NULL END) AS FIRST_HEALTHCARE_DATE,
  MIN(CASE WHEN MERCH_CLASSIFICATION1 = 'Hard Goods' THEN ORDER_PLACED_DATE ELSE NULL END) AS FIRST_HARDGOODS_DATE,
  MIN(CASE WHEN MERCH_CLASSIFICATION1 = 'Specialty' THEN ORDER_PLACED_DATE ELSE NULL END) AS FIRST_SPECIALITY_DATE,
  MIN(CASE WHEN MERCH_CLASSIFICATION1 = 'Premium' THEN ORDER_PLACED_DATE ELSE NULL END) AS FIRST_PREMIUM_DATE,
  LEAST(COALESCE(FIRST_CONSUMABLES_DATE,FIRST_HEALTHCARE_DATE,FIRST_HARDGOODS_DATE,FIRST_SPECIALITY_DATE,FIRST_PREMIUM_DATE),
      COALESCE(FIRST_HEALTHCARE_DATE,FIRST_HARDGOODS_DATE,FIRST_SPECIALITY_DATE,FIRST_PREMIUM_DATE,FIRST_CONSUMABLES_DATE),
      COALESCE(FIRST_HARDGOODS_DATE,FIRST_SPECIALITY_DATE,FIRST_PREMIUM_DATE,FIRST_CONSUMABLES_DATE,FIRST_HEALTHCARE_DATE),
      COALESCE(FIRST_SPECIALITY_DATE,FIRST_PREMIUM_DATE,FIRST_CONSUMABLES_DATE,FIRST_HEALTHCARE_DATE,FIRST_HARDGOODS_DATE),
      COALESCE(FIRST_PREMIUM_DATE,FIRST_CONSUMABLES_DATE,FIRST_HEALTHCARE_DATE,FIRST_HARDGOODS_DATE,FIRST_SPECIALITY_DATE)) AS FIRST_ORDER_DATE

  FROM ORDERS
  
  GROUP BY 1
),

FO_HG_CUSTOMERS AS (
  SELECT
  DISTINCT C.CUSTOMER_ID, A.FIRST_ORDER_DATE

  FROM CUSTOMERS AS C
  JOIN MC1_DATES AS A
  on C.CUSTOMER_ID = A.CUSTOMER_ID

  WHERE A.FIRST_ORDER_DATE = A.FIRST_HARDGOODS_DATE
      AND (A.FIRST_CONSUMABLES_DATE > A.FIRST_ORDER_DATE OR A.FIRST_CONSUMABLES_DATE IS NULL)
      AND (A.FIRST_HEALTHCARE_DATE > A.FIRST_ORDER_DATE OR A.FIRST_HEALTHCARE_DATE IS NULL)
      AND (A.FIRST_SPECIALITY_DATE > A.FIRST_ORDER_DATE OR A.FIRST_SPECIALITY_DATE IS NULL)
      AND (A.FIRST_PREMIUM_DATE > A.FIRST_ORDER_DATE OR A.FIRST_PREMIUM_DATE IS NULL)
)

SELECT * FROM FO_HG_CUSTOMERS
);